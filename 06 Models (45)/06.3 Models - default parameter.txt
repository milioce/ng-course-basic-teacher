server/server.model.ts
-------------------------------------------------------------------------------
export class Server {
  constructor(
    public name: string,
    public id: number,
    public status: string,
    public instanceType: string,
    public started: Date = null
  ) {
    if (!started) {
      this.started = new Date();
    }
  }
}


server/server.component.html
-------------------------------------------------------------------------------
<div class="container">
  <h2>Servers</h2>
  <div class="form-group">
    <label for="name">Server name</label>
    <input type="text" id="name" class="form-control" [(ngModel)]="serverName">
  </div>
  <button
    class="btn btn-primary"
    (click)="onCreateServer()">
    Add Server
  </button>

  <h3 class="mt-4">Server List</h3>
  <ul class="list-group">
    <li class="list-group-item" *ngFor="let server of servers">
    <span class="badge" [ngClass]="getStatusClass(server)">{{ server.status }}</span>
    <span class="ml-2">
      <strong>{{ server.name }}</strong> | {{ server.instanceType}} | {{ server.started }}
    </span>
    </li>
  </ul>
</div>


server/server.component.ts
-------------------------------------------------------------------------------
import { Server } from './server.model';
...
export class ServerComponent {
  serverName = '';
  servers: Server[] = [
    new Server('Production', 1, 'stable', 'medium'),
    new Server('User database', 2, 'stable', 'large'),
    new Server('Stage', 3, 'failed', 'small'),
    new Server('Development', 4, 'initializing', 'small')
  ];

  constructor() {
  }

  onCreateServer() {
    const server = new Server(this.serverName, this.servers.length, 'stable', 'medium');
    this.servers.push(server);
  }

  getStatusClass(server: Server) {
    const classes = {
      'stable': 'badge-success',
      'failed': 'badge-danger',
      'initializing': 'badge-warning'
    }

    return classes[server.status];
  }
